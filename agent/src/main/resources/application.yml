server:
  port: 8080

spring:
  application:
    name: agent
---

spring:
  profiles: default
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB        # 개별 파일 한도 (지금 1MB에 막혀서 이 값을 키워야 함)
      max-request-size: 200MB     # 요청 전체 한도
      file-size-threshold: 2MB    # 이보다 크면 디스크로 스풀
      location: /tmp/uploads      # 임시 폴더(존재/쓰기권한 필요; Windows면 e.g. C:/temp/uploads)
  data:
    mongodb:
      uri: mongodb://admin:admin123@43.201.115.236:27017/agent_db?authSource=admin
  #  data:
  #    mongodb:
  #      host: localhost
  #      port: 27017
  #      database: conversion_db
  #      username: admin
  #      password: admin123
  #      authentication-database: admin
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: java
          #<<< EDA / Topic Name
          destination: python-message
          #>>> EDA / Topic Name
          contentType: application/json
        event-out:
          #<<< EDA / Topic Name
          destination: java-message
          #>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8084

aws:
  region: ap-northeast-2
  s3:
    bucket: codefile-storage
  credentials:
    accessKey: 
    secretKey: 

---

spring:
  profiles: docker
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB
      file-size-threshold: 2MB
      location: /tmp/uploads
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: agent
          destination: backend
          contentType: application/json
        event-out:
          destination: backend
          contentType: application/json