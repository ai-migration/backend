server:
  port: 8080

spring:
  application:
    name: admin
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

---

spring:
  profiles: default
  h2:
    console:
      enabled: true
  datasource:
    url: jdbc:h2:mem:admindb
    driver-class-name: org.h2.Driver
    username: sa
    password: 1234
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: admin
#<<< EDA / Topic Name
          destination: backend
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: backend
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8085

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: admin
          destination: backend
          contentType: application/json
        event-out:
          destination: backend
          contentType: application/json


