spring:
  profiles:
    active: default

---

spring:
  profiles: default

  application:
    name: admin

  datasource:
    url: jdbc:mysql://43.201.38.84:3306/egov_llm_platform?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: teammate          # (권장) 루트 대신 전용 계정
    password: tm1234

  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: admin
          destination: backend
          contentType: application/json
        event-out:
          destination: backend
          contentType: application/json

jwt:
  secret: my-secret-jwt-key
  expirationMs: 3600000

api:
  url:
    admin: http://localhost:8085

server:
  port: 8085

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---

spring:
  profiles: docker

  application:
    name: admin

  datasource:
    url: jdbc:mysql://mysql-llm:3306/egov_llm_platform?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: teammate
    password: tm1234

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl

  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: admin
          destination: backend
          contentType: application/json
        event-out:
          destination: backend
          contentType: application/json

jwt:
  secret: my-secret-jwt-key
  expirationMs: 3600000

api:
  url:
    admin: http://admin:8080

server:
  port: 8080
